<h1 class="text-3xl font-bold mb-6 text-center">Invoice</h1>

<div class="max-w-2xl mx-auto mb-12">
  <h2 class="text-xl font-semibold mb-2">Customer Information</h2>
  <p><%= @user.name %></p>
  <p><%= @user.address %></p>
  <p><%= @user.province.name %></p>

  <h2 class="text-xl font-semibold mt-6 mb-2">Order Summary</h2>
  <table class="table-auto w-full mb-6">
    <thead>
      <tr class="border-b-2 border-gray-300">
        <th class="px-4 py-2 text-left">Product</th>
        <th class="px-4 py-2 text-right">Quantity</th>
        <th class="px-4 py-2 text-right">Base Price</th>
        <th class="px-4 py-2 text-right">Total Price</th>
      </tr>
    </thead>
    <tbody class="divide-y divide-gray-200">
      <% @cart_items.each_with_index do |(product, quantity), index| %>
        <tr class="<%= index.even? ? 'bg-gray-200' : 'bg-white' %>">
          <td class="px-4 py-2 text-left"><%= product.name %></td>
          <td class="px-4 py-2 text-right"><%= quantity %></td>
          <td class="px-4 py-2 text-right"><%= number_to_currency(product.base_price) %></td>
          <td class="px-4 py-2 text-right"><%= number_to_currency(product.base_price * quantity) %></td>
        </tr>
      <% end %>
      <% tax_index = @cart_items.size %>
      <tr class="<%= tax_index.even? ? 'bg-gray-200' : 'bg-white' %>">
        <td colspan="3" class="px-4 py-2 text-left font-semibold">Subtotal</td>
        <td class="px-4 py-2 text-right font-semibold"><%= number_to_currency(@subtotal) %></td>
      </tr>
      <tr class="<%= (tax_index + 1).even? ? 'bg-gray-200' : 'bg-white' %>">
        <td colspan="3" class="px-4 py-2 text-left font-semibold">PST (<%= @pst_rate_100 %>%)</td>
        <td class="px-4 py-2 text-right font-semibold"><%= number_to_currency(@pst) %></td>
      </tr>
      <tr class="<%= (tax_index + 2).even? ? 'bg-gray-200' : 'bg-white' %>">
        <td colspan="3" class="px-4 py-2 text-left font-semibold">GST (<%= @gst_rate_100 %>%)</td>
        <td class="px-4 py-2 text-right font-semibold"><%= number_to_currency(@gst) %></td>
      </tr>
      <tr class="<%= (tax_index + 3).even? ? 'bg-gray-200' : 'bg-white' %>">
        <td colspan="3" class="px-4 py-2 text-left font-semibold">HST (<%= @hst_rate_100 %>%)</td>
        <td class="px-4 py-2 text-right font-semibold"><%= number_to_currency(@hst) %></td>
      </tr>
      <tr class="<%= (tax_index + 4).even? ? 'bg-gray-200' : 'bg-white' %>">
        <td colspan="3" class="px-4 py-2 text-left font-semibold">Total</td>
        <td class="px-4 py-2 text-right font-semibold"><%= number_to_currency(@total) %></td>
      </tr>
    </tbody>
  </table>

   <div class="text-center">
    <%= link_to 'Back to Products', products_path, class: 'bg-blue-500 text-white py-2 px-4 rounded' %>
    </div>
  <%= form_tag checkout_path, method: :post, id: 'payment-form' do %>
    <div class="form-row">
      <label for="card-element">
        Credit or debit card
      </label>
      <div id="card-element" class="my-4">
        <!-- A Stripe Element will be inserted here. -->
      </div>

      <!-- Used to display form errors. -->
      <div id="card-errors" role="alert"></div>
    </div>

    <div class="flex text-center">
      <%= submit_tag 'Pay', class: 'bg-green-500 text-white py-2 px-4 rounded' %>
    </div>
  <% end %>
  <%= button_to 'Buy Later', buy_later_checkout_path(@order), method: :post, class: 'bg-yellow-500 text-white py-2 px-4 rounded mt-4' %>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
  // Create a Stripe client.
  var stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');

  // Create an instance of Elements.
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      // Add your base input styles here. For example:
      fontSize: '16px',
      color: '#32325d',
    },
  };

  // Create an instance of the card Element.
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the `card-element` <div>.
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.on('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  // Handle form submission.
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error.
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server.
        stripeTokenHandler(result.token);
      }
    });
  });

  // Submit the form with the Stripe token.
  function stripeTokenHandler(token) {
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Submit the form
    form.submit();
  }
</script>